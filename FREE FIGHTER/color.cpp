//=============================================================================
//
// スコア処理 [score.cpp]
// Author : 
//
//=============================================================================
#include "score.h"
#include "texture.h"
#include "sprite.h"


//*****************************************************************************
// マクロ定義
//*****************************************************************************
#define TEXTURE_WIDTH				(50)	// キャラサイズ
#define TEXTURE_HEIGHT				(50)	// 


//*****************************************************************************
// プロトタイプ宣言
//*****************************************************************************


//*****************************************************************************
// グローバル変数
//*****************************************************************************
static bool						g_Use;						// true:使っている  false:未使用
static float					g_w, g_h;					// 幅と高さ
static D3DXVECTOR3				g_Pos;						// ポリゴンの座標
static int						g_TexNo;					// テクスチャ番号
static int						g_TexNow;
static D3DXCOLOR				g_rgba[4];

static int						g_Color;					// 何色か
static int						g_Color2;

//=============================================================================
// 初期化処理
//=============================================================================
HRESULT InitColor(void)
{
	//テクスチャ生成
	g_TexNo = LoadTexture((char*)"data/TEXTURE/fade_white.png");
	g_TexNow = LoadTexture((char*)"data/TEXTURE/nowcolor.png");

	//初期化
	g_Use = true;
	g_w = TEXTURE_WIDTH;
	g_h = TEXTURE_HEIGHT;
	g_Pos = D3DXVECTOR3(200.0f, 50.0f, 0.0f);

	g_rgba[0] = D3DXCOLOR(1.0f, 0.5f, 0.5f, 1.0f);
	g_rgba[1] = D3DXCOLOR(0.5f, 1.0f, 0.5f, 1.0f);
	g_rgba[2] = D3DXCOLOR(0.5f, 1.0f, 1.0f, 1.0f);
	g_rgba[3] = D3DXCOLOR(1.0f, 1.0f, 0.5f, 1.0f);

	g_Color = 0;	// スコアの初期化

	return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void UninitColor(void)
{

}

//=============================================================================
// 更新処理
//=============================================================================
void UpdateColor(void)
{
	g_Color2 = g_Color;
}

//=============================================================================
// 描画処理
//=============================================================================
void DrawColor(void)
{
	//有効化フラグがONなら描画する
	if (g_Use)
	{

		// スコアの位置やテクスチャー座標を反映
		float px = g_Pos.x;	// 表示位置X
		float py = g_Pos.y;				// 表示位置Y
		float pw = g_w;					// 表示幅
		float ph = g_h;					// 表示高さ

		float tw = 0.0f;		// テクスチャの幅
		float th = 0.0f;		// テクスチャの高さ
		float tx = 1.0f;			// テクスチャの左上X座標
		float ty = 1.0f;			// テクスチャの左上Y座標

	
		// １枚のポリゴンの頂点とテクスチャ座標を設定

		DrawSpriteColor(g_TexNo, px, py, pw, ph, tx, ty, tw, th, g_rgba[g_Color]);

	
		DrawSprite(g_TexNow, 100.0f, 50.0f, 150.0f, 50.0f, 0.0f, 0.0f, 1.0f, 1.0f);


	}


	
	
}

//=============================================================================
// スコアを加算する
// 引数:add :追加する点数。マイナスも可能
//=============================================================================
void AddColor(int add)
{
	g_Color = add;
}

